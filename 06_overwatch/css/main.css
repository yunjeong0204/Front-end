/* css 코드는 html 구조에 맞춰 작성하기 */



body {
  height: 100vh;
  background-image: url("../images/bg.jpg");

  /* 반복하지않겠다 */
  background-repeat: no-repeat;
  background-size: cover;
  background-attachment: fixed;
}

.container {
  padding: 50px 0;
}

.container .heroes {
  display: flex;
  /* 기본적으로 줄바꿈되지 않고 기본 감소 너비 비율이1이어서 한 줄에 모든 요소가 표시 */
  flex-wrap: wrap;
  /* background-color: orange; */
  justify-content: center;
  /* max-width: 700px; */

  /* flex로도 정렬이 가능하지만 더 복잡 */
  /* margin으로 가운데 정렬하기 위한 조건: 블록 요소에 가로 사이즈가 명시되어 있는 경우 */
  margin: 0 auto;

  padding: 40px 20px;
}

.container .heroes .hero {
  width: 80px;
  height: 84px;
  margin: 4px;
  background-color: #555;
  border: 3px solid white;
  transform: skewX(-14deg);

  /* 둥글게 */
  border-radius: 10px;
  box-sizing: border-box;

  /* 확대 효과를 좀 더 자연스럽게 전환 효과 추가 */
  /* transition: 1s; */
  /* 개별 적용 시, css 속성마다 쉼표로 구분 */
  transition:
    transform .1s,
    background-color .6s;

  /* 그림이 넘쳐서 숨겨주기 그림에 넣는 것이 아니고 부모에 넣는 거임! */
  overflow: hidden;
}

/* 마우스 올렸을 때 배경색 변경 및 확대 */
.container .heroes .hero:hover {
  /* background-color: #ff9c00; */

  /* 다시 각도 줘야함 - skewX */
  transform: scale(1.3) skewX(-14deg);

  /* 앞으로 나오게 하기 (position 값이 없어도 flex item이라 사용 가능)*/
  z-index: 1;
}

.container .heroes .hero .image {
  width: 140%;
  height: 100%;
  background-position: center;
  background-size: 90px;

  /* 반복하지 않겠다. */
  background-repeat: no-repeat;

  /* 그림이 기울어져 있어서 원상태로, 오른쪽으로 가있어서 왼쪽으로 이동시켜줌 */
  transform: skew(14deg) translate(-16px);
}

.container .heroes .hero:nth-child(1) .image {
  background-image: url("../images/hero1.png");
}

.container .heroes .hero:nth-child(2) .image {
  background-image: url("../images/hero2.png");
}

.container .heroes .hero:nth-child(3) .image {
  background-image: url("../images/hero3.png");
}

.container .heroes .hero:nth-child(4) .image {
  background-image: url("../images/hero4.png");
}

.container .heroes .hero:nth-child(5) .image {
  background-image: url("../images/hero5.png");
}

.container .heroes .hero:nth-child(6) .image {
  background-image: url("../images/hero6.png");
}

.container .heroes .hero:nth-child(7) .image {
  background-image: url("../images/hero7.png");
}

.container .heroes .hero:nth-child(8) .image {
  background-image: url("../images/hero8.png");
}

.container .heroes .hero:nth-child(9) .image {
  background-image: url("../images/hero9.png");
}

.container .heroes .hero:nth-child(10) .image {
  background-image: url("../images/hero10.png");
}

.container .heroes .hero:nth-child(11) .image {
  background-image: url("../images/hero11.png");
}

.container .heroes .hero:nth-child(12) .image {
  background-image: url("../images/hero12.png");
}

.container .heroes .hero:nth-child(13) .image {
  background-image: url("../images/hero13.png");
}

.container .heroes .hero:nth-child(14) .image {
  background-image: url("../images/hero14.png");
}

.container .heroes .hero:nth-child(15) .image {
  background-image: url("../images/hero15.png");
}

.container .heroes .hero:nth-child(16) .image {
  background-image: url("../images/hero16.png");
}

.container .heroes .hero:nth-child(17) .image {
  background-image: url("../images/hero17.png");
}

.container .heroes .hero:nth-child(18) .image {
  background-image: url("../images/hero18.png");
}

.container .heroes .hero:nth-child(19) .image {
  background-image: url("../images/hero19.png");
}

.container .heroes .hero:nth-child(20) .image {
  background-image: url("../images/hero20.png");
}

.container .heroes .hero:nth-child(21) .image {
  background-image: url("../images/hero21.png");
}

.container .heroes .hero:nth-child(22) .image {
  background-image: url("../images/hero22.png");
}

.container .heroes .hero:nth-child(23) .image {
  background-image: url("../images/hero23.png");
}

.container .heroes .hero:nth-child(24) .image {
  background-image: url("../images/hero24.png");
}

.container .heroes .hero:nth-child(25) .image {
  background-image: url("../images/hero25.png");
}

.container .heroes .hero:nth-child(26) .image {
  background-image: url("../images/hero26.png");
}

.container .heroes .hero:nth-child(27) .image {
  background-image: url("../images/hero27.png");
}

.container .heroes .hero:nth-child(28) .image {
  background-image: url("../images/hero28.png");
}

.container .heroes .hero:nth-child(29) .image {
  background-image: url("../images/hero29.png");
}

.container .heroes .hero:nth-child(30) .image {
  background-image: url("../images/hero30.png");
}

.container .heroes .hero:nth-child(31) .image {
  background-image: url("../images/hero31.png");
}

.container .heroes .hero:nth-child(32) .image {
  background-image: url("../images/hero32.png");
}

.container .logo {
  max-width: 300px;
  /* 가로 사이즈를 갖는 블록 요소 하나를 가운데로 정렬하고 싶다면 margin을 이용하면 간단 */

  /* margin으로 가운데 정렬하기 */
  margin: 0 auto;
  padding: 0 20px;
}

.container .logo img {
  /* 부모 요소 가로 너비에 100%, 300px보다 커질 수 없음 */
  width: 100%;
}